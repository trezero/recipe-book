{"version":3,"file":"shopping-list-add.component.js","sourceRoot":"","sources":["../../GitHubNoDropBox/Angular/tutorials/recipe-book/tmp/broccoli_type_script_compiler-input_base_path-suZ1RGX6.tmp/0/src/app/shopping-list/shopping-list-add.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAgE,eAAe,CAAC,CAAA;AAChF,2BAAyB,sBAAsB,CAAC,CAAA;AAChD,sCAAkC,yBAAyB,CAAC,CAAA;AAQ5D;IAKE,kCAAoB,GAAwB;QAAxB,QAAG,GAAH,GAAG,CAAqB;QAHlC,YAAO,GAAG,IAAI,mBAAY,EAAE,CAAC;QACvC,UAAK,GAAG,IAAI,CAAC;IAEmC,CAAC;IAEjD,8CAAW,GAAX,UAAY,OAAO;QACjB,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,KAAK,IAAI,CAAC,CAAC,CAAC;YACvC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,IAAI,GAAG,EAAC,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAC,CAAC;QACzC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC;IACH,CAAC;IAED,2CAAQ,GAAR,UAAS,UAAsB;QAC7B,IAAM,aAAa,GAAG,IAAI,uBAAU,CAAC,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC;QACzE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,aAAa,CAAE,CAAC;YAC7C,IAAI,CAAC,OAAO,EAAE,CAAC;QAClB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,IAAI,GAAG,aAAa,CAAC;YAC1B,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC9B,CAAC;IACH,CAAC;IAED,2CAAQ,GAAR;QACE,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/B,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,0CAAO,GAAP;QACE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC;IAlCD;QAAC,YAAK,EAAE;;0DAAA;IACR;QAAC,aAAM,EAAE;;6DAAA;IAPX;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,sBAAsB;YAChC,WAAW,EAAE,kCAAkC;SAChD,CAAC;;gCAAA;IAsCF,+BAAC;AAAD,CAAC,AArCD,IAqCC;AArCY,gCAAwB,2BAqCpC,CAAA","sourcesContent":["import {Component, Input, OnChanges, Output, EventEmitter} from '@angular/core';\nimport {Ingredient} from \"../shared/ingredient\";\nimport {ShoppingListService} from \"./shopping-list.service\";\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'rb-shopping-list-add',\n  templateUrl: 'shopping-list-add.component.html'\n})\nexport class ShoppingListAddComponent implements OnChanges {\n  @Input() item: Ingredient;\n  @Output() cleared = new EventEmitter();\n  isAdd = true;\n\n  constructor(private sls: ShoppingListService) { }\n\n  ngOnChanges(changes) {\n    if (changes.item.currentValue === null) {\n      this.isAdd = true;\n      this.item = {name: null, amount: null};\n    } else {\n      this.isAdd = false;\n    }\n  }\n\n  onSubmit(ingredient: Ingredient) {\n    const newIngredient = new Ingredient(ingredient.name, ingredient.amount);\n    if (!this.isAdd) {\n       this.sls.editItem(this.item, newIngredient );\n       this.onClear();\n    } else {\n      this.item = newIngredient;\n      this.sls.addItem(this.item);\n    }\n  }\n\n  onDelete() {\n    this.sls.deleteItem(this.item);\n    this.onClear();\n  }\n\n  onClear() {\n    this.isAdd = true;\n    this.cleared.emit(null);\n  }\n\n}\n"]}