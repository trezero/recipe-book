{"version":3,"file":"recipe-edit.component.js","sourceRoot":"","sources":["../../../GitHubNoDropBox/Angular/tutorials/recipe-book/tmp/broccoli_type_script_compiler-input_base_path-suZ1RGX6.tmp/0/src/app/recipes/recipe-edit/recipe-edit.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { Subscription } from \"rxjs/Rx\";\nimport {\n    FormArray,\n    FormGroup,\n    FormControl,\n    Validators,\n    FormBuilder,\n    REACTIVE_FORM_DIRECTIVES\n} from \"@angular/forms\";\n\nimport { RecipeService } from \"../recipe.service\";\nimport { Recipe } from \"../recipe\";\n\n@Component({\n  moduleId: module.id,\n  selector: 'rb-recipe-edit',\n  templateUrl: 'recipe-edit.component.html',\n  styles: [],\n  directives: [REACTIVE_FORM_DIRECTIVES]\n})\nexport class RecipeEditComponent implements OnInit, OnDestroy {\n  recipeForm: FormGroup;\n  private recipeIndex: number;\n  private recipe: Recipe;\n  private isNew = true;\n  private subscription: Subscription;\n\n  constructor(private route: ActivatedRoute,\n              private recipeService: RecipeService,\n              private formBuilder: FormBuilder,\n              private router: Router) {}\n\n  ngOnInit() {\n    this.subscription = this.route.params.subscribe(\n        (params: any) => {\n          if (params.hasOwnProperty('id')) {\n            this.isNew = false;\n            this.recipeIndex = +params['id'];\n            this.recipe = this.recipeService.getRecipe(this.recipeIndex);\n          } else {\n            this.isNew = true;\n            this.recipe = null;\n          }\n          this.initForm();\n        }\n    );\n  }\n\n  onSubmit() {\n    const newRecipe = this.recipeForm.value;\n    if (this.isNew) {\n      this.recipeService.addRecipe(newRecipe);\n    } else {\n      this.recipeService.editRecipe(this.recipe, newRecipe);\n    }\n    this.navigateBack();\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  onCancel() {\n    this.navigateBack();\n  }\n\n  onAddItem(name: string , amount: string) {\n    (<FormArray>this.recipeForm.controls['ingredients']).push(\n        new FormGroup({\n          name: new FormControl(name, Validators.required),\n          amount: new FormControl(amount, [\n            Validators.required,\n            Validators.pattern(\"\\\\d+\")\n          ])\n        })\n    );\n  }\n\n  onRemoveItem(index: number) {\n    (<FormArray>this.recipeForm.controls['ingredients']).removeAt(index);\n  }\n\n\n  private navigateBack() {\n    this.router.navigate(['../']);\n  }\n\n  private initForm() {\n    let recipeName = '';\n    let recipeImageUrl = '';\n    let recipeContent = '';\n    let recipeIngredients:FormArray = new FormArray([]);\n\n    if (!this.isNew) {\n      if (this.recipe.hasOwnProperty('ingredients')) {\n        for (let i = 0; i < this.recipe.ingredients.length; i++) {\n          recipeIngredients.push(\n              new FormGroup({\n                name: new FormControl(this.recipe.ingredients[i].name, Validators.required),\n                amount: new FormControl(this.recipe.ingredients[i].amount, [\n                  Validators.required,\n                  Validators.pattern(\"\\\\d+\")\n                ])\n              })\n          );\n        }\n      }\n      recipeName = this.recipe.name;\n      recipeImageUrl = this.recipe.imagePath;\n      recipeContent = this.recipe.description;\n    }\n    this.recipeForm = this.formBuilder.group({\n      name: [recipeName, Validators.required],\n      imagePath: [recipeImageUrl, Validators.required],\n      description: [recipeContent, Validators.required],\n      ingredients: recipeIngredients\n    });\n  }\n\n}\n"]}