{"version":3,"file":"recipe.service.js","sourceRoot":"","sources":["../../GitHubNoDropBox/Angular/tutorials/recipe-book/tmp/broccoli_type_script_compiler-input_base_path-suZ1RGX6.tmp/0/src/app/recipes/recipe.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAuC,eAAe,CAAC,CAAA;AACvD,uBAAqB,UAAU,CAAC,CAAA;AAChC,2BAAyB,sBAAsB,CAAC,CAAA;AAChD,qBAAsC,eAAe,CAAC,CAAA;AAGtD;IAWE,uBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAV9B,mBAAc,GAAG,IAAI,mBAAY,EAAY,CAAC;QAEtC,YAAO,GAAa;YAC1B,IAAI,eAAM,CAAC,WAAW,EAAE,YAAY,EAAE,gFAAgF,EAAE;gBACtH,IAAI,uBAAU,CAAC,cAAc,EAAE,CAAC,CAAC;gBACjC,IAAI,uBAAU,CAAC,WAAW,EAAE,CAAC,CAAC;aAC/B,CAAC;YACF,IAAI,eAAM,CAAC,cAAc,EAAE,SAAS,EAAE,gFAAgF,EAAE,EAAE,CAAC;SAC5H,CAAC;IAEgC,CAAC;IAEnC,kCAAU,GAAV;QACE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAED,iCAAS,GAAT,UAAU,EAAU;QAClB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IAC1B,CAAC;IAED,oCAAY,GAAZ,UAAa,MAAc;QACzB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;IACvD,CAAC;IAED,iCAAS,GAAT,UAAU,MAAc;QACtB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5B,CAAC;IAED,kCAAU,GAAV,UAAW,SAAiB,EAAE,SAAiB;QAC7C,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,GAAG,SAAS,CAAC;IAC5D,CAAC;IAED,iCAAS,GAAT;QACE,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC1C,IAAM,OAAO,GAAG,IAAI,cAAO,CAAC;YAC1B,eAAe,EAAE,kBAAkB;SACpC,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,sDAAsD,EAAE,IAAI,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;IACzG,CAAC;IAED,iCAAS,GAAT;QAAA,iBASC;QARC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,sDAAsD,CAAC;aACvE,GAAG,CAAC,UAAC,QAAkB,IAAK,OAAA,QAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,SAAS,CACN,UAAC,IAAc;YACb,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;QACzC,CAAC,CACJ,CAAC;IACR,CAAC;IAnDH;QAAC,iBAAU,EAAE;;qBAAA;IAqDb,oBAAC;AAAD,CAAC,AApDD,IAoDC;AApDY,qBAAa,gBAoDzB,CAAA","sourcesContent":["import {Injectable, EventEmitter} from '@angular/core';\nimport {Recipe} from \"./recipe\";\nimport {Ingredient} from \"../shared/ingredient\";\nimport {Headers, Http, Response} from \"@angular/http\";\n\n@Injectable()\nexport class RecipeService {\n  recipesChanged = new EventEmitter<Recipe[]>();\n\n  private recipes: Recipe[] = [\n    new Recipe('Schnitzel', 'Very tasty', 'http://www.daringgourmet.com/wp-content/uploads/2014/03/Schnitzel-7_edited.jpg', [\n      new Ingredient('French Fries', 2),\n      new Ingredient('Pork Meat', 1)\n    ]),\n    new Recipe('Summer Salad', 'Okayish', 'http://ohmyveggies.com/wp-content/uploads/2013/06/the_perfect_summer_salad.jpg', [])\n  ];\n\n  constructor(private http: Http) { }\n\n  getRecipes() {\n    return this.recipes;\n  }\n\n  getRecipe(id: number) {\n    return this.recipes[id];\n  }\n\n  deleteRecipe(recipe: Recipe) {\n    this.recipes.splice(this.recipes.indexOf(recipe), 1);\n  }\n\n  addRecipe(recipe: Recipe) {\n    this.recipes.push(recipe);\n  }\n\n  editRecipe(oldRecipe: Recipe, newRecipe: Recipe) {\n    this.recipes[this.recipes.indexOf(oldRecipe)] = newRecipe;\n  }\n\n  storeData() {\n    const body = JSON.stringify(this.recipes);\n    const headers = new Headers({\n      'Contenty-Type': 'application/json'\n    });\n    return this.http.put('https://recipebook-64991.firebaseio.com/recipes.json', body, {headers: headers});\n  }\n\n  fetchData() {\n    return this.http.get('https://recipebook-64991.firebaseio.com/recipes.json')\n        .map((response: Response) => response.json())\n        .subscribe(\n            (data: Recipe[]) => {\n              this.recipes = data;\n              this.recipesChanged.emit(this.recipes);\n            }\n        );\n  }\n\n}\n"]}